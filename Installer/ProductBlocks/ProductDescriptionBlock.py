'''
Created on 08/04/2013

@author: vladimir
'''

import struct
from SiteConfiguration import OFFSET
import logging

logger = logging.getLogger("ProductDescriptionBlock")

class ProductDescriptionBlock:
    '''
    Figure 3-6. Graphic Product Message - PRODUCT DESCRIPTION BLOCK (Sheet 2-6-7)
    page 3-26. Document Number 2620001L
    '''

    def __init__(self, gp):
        '''
        Constructor
        '''
        gp.binaryfile.seek(OFFSET, 0)
        header = struct.unpack('>2H2i3Hh2i10Hi28H3i', gp.binaryfile.read(120))
        # the first 9 halfwords are the message header
        self.MH_msg_code = header[0]# NEXRAD message code defined in table II,
                                    # -131 - -16, 0 - 211, MESCDOFF 1 #
        self.MH_msg_date = header[1]# modified Julian date, DTMESOFF 2 #
        self.MH_msg_time = header[2]# number of seconds after midnight GMT; 
                                    # TMSWOFF 3 TLSWOFF 4 #
        self.MH_msg_len = header[3] # number of bytes including the header; 
                                    # 18 - 409856, LGMSWOFF 5 LGLSWOFF 6 #
        self.MH_src_id = header[4]  # ID of the sender (originator); 0 - 999;
                                    # SRCIDOFF 7 #
        self.MH_dest_id = header[5] # ID of the receiver, 0 - 999, DSTIDOFF 8 #
        self.MH_n_blocks = header[6]# header block plus the product description blocks
                                    # in message; 1 - 51, NBLKSOFF 9 #
                                    
        ##############################################################################
        ############# Product Description Block ######################################
        ##############################################################################
        
        self.divider = header[7]    # value of -1 used to delineate the header from 
                                    # the above message header, DIV1OFF 10 #
        self.latitude=header[8]/1e3 # latitude of radar in .001 degrees, -90. - 90., 
                                    # LTMSWOFF LTLSWOFF #
        self.longitude=header[9]/1e3# longitude of radar in .001 degrees, 
                                    # -180. - 180. East (+) and West (-); LNMSWOFF 
                                    # LNLSWOFF #
        self.height = header[10]    # above mean sea level height of radar in feet, 
                                    # -100 - 11000 RADhGTOFF #
        self.prod_code = header[11] # ernel product code, 16 - 131, negative 
                                    # number is used sometimes; the same as msg_code?;
                                    # PRDCODOFF 16 #
        self.op_mode = header[12]   # operational (weather) mode; 0 = maenance; 
                                    # 1 = clear air; 2 = precipitation (severe weather);
                                    # WTMODOFF #
        self.vcp_num = header[13]   # VCP number; 1 - 767, VCPOFF #
        self.seq_num = header[14]   # sequence number of the request that generated 
                                    # the product (refer to figure 3-3, RPG/PUP ICD); 
                                    # for products generated by an alert condition, 
                                    # = -13, SQNUMOFF #
        self.vol_num = header[15]   # counter, recycles to one (1) every 80 volume 
                                    # scans; 1 - 80, VSNUMOFF #
        self.vol_date = header[16]  # Modified Julian date; VSDATOFF #
        self.vol_time_ms =header[17]# number of seconds after midnight GMT, Most 
                                    #significant 2 bytes, VSTMSWOFF 22, because there 
                                    # are 21 s before this, we can not cast this
                                    # to an int, #
        self.vol_time_ls =header[18]# number of seconds after midnight GMT, least 
                                    # significant 2 bytes VSTLSWOFF 23 #
        self.gen_date = header[19]  # product generation data, modified Julian date, 
                                    # GDPRDOFF #
        self.gen_time = header[20]  # product generation time; seconds after 
                                    # midnight GMT, GTMSWOFF GTLSWOFF #
        
        self.param_1 = header[21]   # product dependent parameter.  For products 43, 
                                    #        44, 45, 46, 55, azimuth of window, 
                                    # in .1 degrees; 0. - 359.9, AZWINOFF #
        self.param_2 = header[22]   # product dependent parameter.  For products 43, 
                                    # 44, 45, 46, 55, range of window, 
                                    # in .1 Nml; 0. - 124.0, RNWINOFF #
        
        self.elev_ind = header[23]  # RPG elevation index in a volume (not cut number), 
                                    # 1 - 20, ELINDOFF #
        
        
        self.param_3 = header[24]   # product dependent parameter.  For products 
                                    # 16 - 21, 28 - 30, 22 - 27, , 87, 43, 46, 
                                    # 45, 44, 55, 56, elevation angle, in .1 degrees,
                                    # -1.0 - 45.0, for product 84, horizontal wind 
                                    # altitude in 1000 feet,  0 to 70, EAZALOFF 30 #    
        
        self.level_1 = header[25]   # data lev. thre. (see p3-63, PRG/PUP ICD),
                                    # DL1OFF 31 #
        self.level_2 = header[26]   # data lev. thre. (see p3-63, PRG/PUP ICD) DL2OFF #
        self.level_3 = header[27]   # data lev. thre. (see p3-63, PRG/PUP ICD) DL3OFF #
        self.level_4 = header[28]   # data lev. thre. (see p3-63, PRG/PUP ICD) DL4OFF #
        self.level_5 = header[29]   # data lev. thre. (see p3-63, PRG/PUP ICD) DL5OFF #
        self.level_6 = header[30]   # data lev. thre. (see p3-63, PRG/PUP ICD) DL6OFF #
        self.level_7 = header[31]   # data lev. thre. (see p3-63, PRG/PUP ICD) DL7OFF #
        self.level_8 = header[32]   # data lev. thre. (see p3-63, PRG/PUP ICD) DL8OFF #
        self.level_9 = header[33]   # data lev. thre. (see p3-63, PRG/PUP ICD) DL9OFF #
        self.level_10 = header[34]  # data lev. thre. (see p3-63, PRG/PUP ICD) DL10OFF #
        self.level_11 = header[35]  # data lev. thre. (see p3-63, PRG/PUP ICD) DL11OFF #
        self.level_12 = header[36]  # data lev. thre. (see p3-63, PRG/PUP ICD) DL12OFF #
        self.level_13 = header[37]  # data lev. thre. (see p3-63, PRG/PUP ICD) DL13OFF #
        self.level_14 = header[38]  # data lev. thre. (see p3-63, PRG/PUP ICD) DL14OFF  #
        self.level_15 = header[39]  # data lev. thre. (see p3-63, PRG/PUP ICD) DL15OFF#
        self.level_16 = header[40]  # data lev. thre. (see p3-63, PRG/PUP ICD);
                                    # DL16OFF 46 #
        
        self.param_4 = header[41]   # product dependent parameter.
                                    # product: 16 - 21, 35 - 38, 63, 65, 64, 
                                    #          66, 89, 90, 43, max reflectivity, 
                                    #      dBZ, -32 - 95, MDL1OFF 47,
                                    # product: 28 - 30, 45; max SPW; Knots; 0 - 19;
                                    # product: 22 - 27, 44, 5556, ; max neg. vel.; 
                                    #      knots; -247 - 0;
                                    # product: 87; max shear value; E-3/second; 
                                    #      0 - 32767;
                                    # product: 51, 86, 50, 85, ; azimrth po one;
                                    #      .1 degrees; 0. - 359.9;
                                    # product: 41, max echo; in 1000 feet; 0 - 70;
                                    # product: 75; RPG ID Number; 0 - 999;
                                    # product: 81; max rainfall accm. dBA; in .1; 
                                    #      0. - 32.0;
                                    # product: 67, 70, 68, 71, 69, 72, ; max turbulence;
                                    #      .1 CM E2/3/S; 0. - 25.0;
                                    # product: 77; PUP id number; 0 - 32767;
                                    # product: 47; max percentage; 0 - 99;
                                    # product: 46; max neg. shear; E-3/sec; -500 - 0;
                                    # product: 80, 78, 79; max rainfall; .1 inches;
                                    #      0. - 327.6;
                                    # product: 58; total number of storms; 0 - 20;
                                    # product: 82; max rainfall; .1 inches/hour; 0. - 63.0;
                                    # product: 84, 48; wind speed (horiz); knots; 0 - 350;
                                    # product: 57; max VIL; Kg/Sq. meter; 0 - 200; #
                   
        self.param_5 = header[42]   # product dependent parameter.  
                                    #    product: 22 - 27, 44, 55, 56; max pos. velocity; 
                                    # Knots; 0 - 245; MDL2OFF 48;
                                    # product: 87; azi of max shear; .1 degrees;
                                    #      0 - 359.9;
                                    # product: 51, 86, 50, 85; range of po one;
                                    #      .1 Nmi; 0 - 124.;
                                    # product: 81; rate bias; in .01; 0 - 99.99;
                                    # product: 63, 65, 67, 70, 64, 66, 68, 71, 89, 90, 
                                    #      69, 72, ; bottom of layer; in 1000 seet;
                                    #      variable ranges;
                                    # product: 46; max pos. shear; E-3/sec; 0 - 500;
                                    # product: 80; beg. date rainfall; julian date;
                                    # product: 78, 79; rate bias; in .01; 0 - 99.99;
                                    # product: 84; wind direction (horiz); degrees;
                                    #      0 - 359;
                                    # product: 48; direction of max speed; degrees;
                                    #      0 - 359; #

        self.param_6 = header[43]   # product dependent parameter.
                                    # product: 87; range of max shear; .1 Nmi;
                                    #      0 - 124.0; MDL3OFF 49;
                                    # product: 51, 86, 50, 85; azi po two;
                                    #      .1 degrees; 0 - 359.9;
                                    # product: 81; err var. of bias; in .01; 0 - 99.99;
                                    # product: 69; top of layer; in feet; 6000 - 58000;
                                    # product: 65, 67, 70, 64, 66, 68, 71, 89, 90, 69,
                                    #      72; top of layer; in 1000 feet;
                                    #      6 - 58 and variable ranges;
                                    # product: 77; user designation; 0 - 47;
                                    # product: 74, 83; edit decision time; seconds;
                                    #      60 - 540;
                                    # product: 43, 46, 45, 44; height of phenomena;
                                    #      1000 Ft AGL; 0 - 70;
                                    # product: 55, 56; motion source flag; -1 - algorithm;
                                    # product: 80; beg. time rainfall; minutes; 0 - 1439;
                                    # product: 78, 79; err var. of bias; in .01; 0 - 99.99;
                                    # product: 84; elevation angle; .1 degrees; -1. - 45.0;
                                    # product: 48; alt of max speed; in .01 feet/10;
                                    #      0. - 70.00; #
        
        
        self.param_7 = header[44]   # product dependent parameter.
                                    # product: 87; resolution; .01 Nmi;
                                    #      .27, .54, 1.1, 2.2;
                                    # product: 51, 86, 50, 85; range po two;
                                    #      .1 Nmi; 0 - 124.0;
                                    # product: 81, 80, 78, 79; rainfall end date;
                                    #      Julian date;
                                    # product: 74, 83; editing timeout; seconds; 60 - 1800;
                                    # product: 55, height of phenomena; 1000 Ft AGL;
                                    #      0 - 70;
                                    # product: 84; slant range; .1 Nmi; 0 - 124.0; #
        
        self.param_8 = header[45]    
        self.param_9 = header[46]   # product dependent parameters.
                                    # product: 16 - 21, 35 - 38, 50, 85, 63, 
                                    #      65, 64, 66, 89, 90, calibration constant; 
                                    #      in dB; -50. - 50.; CALCONMSW 51 CALCONLSW
                                    # product: 81; cast to ; rainfall endtime; 
                                    #      minutes; 0 - 1439;
                                    # product: 74; cast to ; edited indicator; 
                                    #      not 0 for edited;
                                    # product: 43, 46, 45, 44, ; cast to ; 
                                    #      alert category; see table IV;
                                    # product: 55; cast to two s; 
                                    #  storm speed; .1 Knots; 0 - 99.9;  
                                    #  storm direction; .1 degrees; 0 - 359.9;
                                    # product: 56; cast to two s; 
                                    #  average storm speed; .1 Knots; 0 - 99.9;  
                                    #  average storm direction; .1 degrees; 0 - 359.9;
                                    # product: 80; cast to two s;
                                    #  end time rainfall; minutes; 0 - 1439;
                                    #  rate bias; in .01; 0 - 99.99;
                                    # product: 78, 79; cast to ; rainfall end time;
                                    #      in minutes; 0 - 1439;
                                    # product: 84; cast to ; RMS error; Knots;
                                    #      0 - 29; STSPDOFF 51 STDIROFF 52 #
        
        self.param_10 = header[47]  # product dependent parameter.
                                    # product: 80; error var of bias; in .01; 0 - 99.99;
                                    # CNTOFF 53 #

        self.n_maps = header[48]    # if the message is a map data, this is the number
                                    # of map pieces, otherwise it is 0; 0 - 17; 
                                    # NMAPSOFF 54 #
        
        self.sym_off = header[49]   # number of shorts from the top of message (message 
                                    # code field in header) to the -1 divider of each 
                                    # block listed. If the offset is zero, the block is
                                    # not part of the product in question;
                                    # OPRMSWOFF 55 OPRLSWOFF 56 #
        self.gra_off = header[50]   # same as above to graphic block 
                                    # OGMSWOFF 57 OGLSWOFF 58 #
        self.tab_off = header[51]   # same as above to tabular block OTADMSWOFF 59 OTADLSWOFF 60
        
#        # Hora de la entrada al sistema          
#        self.scan_time = gmtime((self.gen_date-1)*SECS_PER_DAY + 
#                                self.gen_time) 
        
        logger.debug('Processing Msg_code: %s\n' % self.MH_msg_code)
        